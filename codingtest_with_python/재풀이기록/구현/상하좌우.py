# 상하좌우
## N x N 크기의 정사각형 맵이 있을 때
# R, L, U , D 로 이루어진 이동 경로가 주어졌을 때 최종 위치 출력
# 맨 왼쪽 위는 1,1 맨 오른쪽 아래 좌표는 N, N이다
# 구현 유형 중 이런 지도 문제가 나왔을 때 본 책에서의 팁은 2가지 방법이 있었다
# 1번째
## 두 리스트를 만들어 하나는 좌우 이동에 필요한 4가지 숫자(위 아래 좌 우) 정의, 다른 하나는 상하 이동에 필요한 4가지 숫자(위 아래 좌 우) 정의
## 그리고방향 리스트를 만들어라 [상, 하, 좌, 우] 각각 인덱스에 위치한 대로 이동 리스트를 사용
# 2번째
## 이동에 필요한, 혹은 이동 경로에 해당하는 좌표들을 리스트에 담아라 

# 시작좌표는 항상 (1,1)

n = int(input())
plan = list(map(str, input().split()))
direction = ['U', 'D', 'L', 'R']
dr = [-1, 1, 0, 0]
dc = [0, 0, -1, 1]

r = 1
c = 1

for d in plan:
    move_index = direction.index(d)
    r_ = r + dr[move_index]
    c_ = c + dc[move_index]
    if (1 <= r_ <= n) and (1 <= c_ <= n):
        r = r_
        c = c_
print(r, c)

# 제한시간 : 15분, 풀이시간 :

'''
생각해볼점

변수명 생각하는데 시간 많이 할애됨
상하가 상이 -1일 수 있는 거 주의해라 진짜 제발
'''
